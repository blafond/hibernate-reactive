///usr/bin/env jbang "$0" "$@" ; exit $?
//DEPS org.hibernate:hibernate-core:5.4.10.Final
//DEPS junit:junit:4.12
//DEPS javax.persistence:javax.persistence-api:2.2
//DEPS org.hibernate.reactive:hibernate-reactive-core:1.0.0.CR4
//DEPS org.assertj:assertj-core:3.13.2
//DEPS io.vertx:vertx-core:4.0.3
//DEPS io.vertx:vertx-unit:4.0.3
//DEPS io.vertx:vertx-pg-client:4.0.3
//FILES CoreReactiveTest.java
//
//

import javax.persistence.*;

import static java.lang.System.out;

import org.hibernate.cfg.Configuration;
import org.hibernate.reactive.mutiny.Mutiny;

import org.junit.Test;
import org.junit.runner.RunWith;

import io.vertx.ext.unit.TestContext;
import io.vertx.ext.unit.junit.VertxUnitRunner;

import org.assertj.core.api.Assertions;

@RunWith(VertxUnitRunner.class)
public class {baseName} extends CoreReactiveTest {

	@Override
	protected Configuration constructConfiguration() {
		Configuration configuration = super.constructConfiguration();
		// SET JDBC LOGIN INFORMATION
		configuration.setProperty( Settings.URL, "{hibernate connection url}";
		configuration.setProperty( Settings.USER, "{hibernate connection username}"; // OPTIONAL if included in URL
		configuration.setProperty( Settings.PASS, "{hibernate connection password}"; // OPTIONAL if included in URL
		configuration.addPackage(this.getClass().getPackage().getName());
		configuration.addAnnotatedClass(NamedEntity.class);
		return configuration;
	}

    @Test
    public void persistNamedEntity(TestContext context) {
        NamedEntity entity = new NamedEntity("alpha", 1);

        Mutiny.Session session = getMutinySessionFactory().openSession();

        test(
                context,
                session.persist( entity ).chain(session::flush)
                        .chain( () -> getMutinySessionFactory().withSession( s -> s.find( NamedEntity.class, entity.getId() )))
                        .invoke( foundEntity -> Assertions.assertThat(foundEntity.getColumnValue()).isEqualTo("alpha") )
        );
    }

    @Entity(name = "NamedEntity")
    public static class NamedEntity  {
        @Id
        public Integer id;

        public String columnValue;

        public NamedEntity() {}

        public NamedEntity(String columnValue, Integer id) {
            this.columnValue = columnValue;
            this.id = id;
        }

        public Integer getId() {
            return id;
        }

        public String getColumnValue() {
            return columnValue;
        }

        @Override
        public String toString() {
            return "NamedEntity"
            + "\n\t id = " + id
            + "\n\t columnValue = " + columnValue;
        }
    }
}